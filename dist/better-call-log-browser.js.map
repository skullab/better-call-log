{"version":3,"file":"better-call-log-browser.js","mappings":"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","sources":["webpack://BetterCall/webpack/universalModuleDefinition","webpack://BetterCall/webpack/bootstrap","webpack://BetterCall/./src/BetterCallLevel.ts","webpack://BetterCall/./src/Color.ts","webpack://BetterCall/webpack/runtime/define property getters","webpack://BetterCall/webpack/runtime/hasOwnProperty shorthand","webpack://BetterCall/./src/BetterCallStyleObject.ts","webpack://BetterCall/./src/BetterCallStyle.ts","webpack://BetterCall/./src/BetterCallStyleANSI.ts","webpack://BetterCall/./src/BetterCallStyleCSS.ts","webpack://BetterCall/./src/BetterCallOptions.ts","webpack://BetterCall/./src/BetterCall.ts","webpack://BetterCall/./src/browser.ts","webpack://BetterCall/./src/BetterCallStylePackage.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"BetterCall\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BetterCall\"] = factory();\n\telse\n\t\troot[\"BetterCall\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","export var BetterCallLevel;\n(function (BetterCallLevel) {\n    BetterCallLevel[BetterCallLevel[\"INFO\"] = 2] = \"INFO\";\n    BetterCallLevel[BetterCallLevel[\"LOG\"] = 4] = \"LOG\";\n    BetterCallLevel[BetterCallLevel[\"DEBUG\"] = 8] = \"DEBUG\";\n    BetterCallLevel[BetterCallLevel[\"WARNING\"] = 16] = \"WARNING\";\n    BetterCallLevel[BetterCallLevel[\"ERROR\"] = 32] = \"ERROR\";\n    BetterCallLevel[BetterCallLevel[\"OFF\"] = 0] = \"OFF\";\n    BetterCallLevel[BetterCallLevel[\"ALL\"] = 255] = \"ALL\";\n})(BetterCallLevel || (BetterCallLevel = {}));\n","export var Color;\n(function (Color) {\n    Color[\"Reset\"] = \"\\u001B[0m\";\n    Color[\"Bright\"] = \"\\u001B[1m\";\n    Color[\"Dim\"] = \"\\u001B[2m\";\n    Color[\"Underscore\"] = \"\\u001B[4m\";\n    Color[\"Blink\"] = \"\\u001B[5m\";\n    Color[\"Reverse\"] = \"\\u001B[7m\";\n    Color[\"Hidden\"] = \"\\u001B[8m\";\n    Color[\"FgBlack\"] = \"\\u001B[30m\";\n    Color[\"FgRed\"] = \"\\u001B[31m\";\n    Color[\"FgGreen\"] = \"\\u001B[32m\";\n    Color[\"FgYellow\"] = \"\\u001B[33m\";\n    Color[\"FgBlue\"] = \"\\u001B[34m\";\n    Color[\"FgMagenta\"] = \"\\u001B[35m\";\n    Color[\"FgCyan\"] = \"\\u001B[36m\";\n    Color[\"FgWhite\"] = \"\\u001B[37m\";\n    Color[\"BgBlack\"] = \"\\u001B[40m\";\n    Color[\"BgRed\"] = \"\\u001B[41m\";\n    Color[\"BgGreen\"] = \"\\u001B[42m\";\n    Color[\"BgYellow\"] = \"\\u001B[43m\";\n    Color[\"BgBlue\"] = \"\\u001B[44m\";\n    Color[\"BgMagenta\"] = \"\\u001B[45m\";\n    Color[\"BgCyan\"] = \"\\u001B[46m\";\n    Color[\"BgWhite\"] = \"\\u001B[47m\";\n})(Color || (Color = {}));\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class BetterCallStyleObject {\n}\n","import { BetterCallStyleObject } from \"./BetterCallStyleObject\";\nexport class BetterCallStyle {\n    constructor(style) {\n        this.style = style !== null && style !== void 0 ? style : new BetterCallStyleObject();\n    }\n}\n","import { BetterCallStyle } from \"./BetterCallStyle\";\nimport { Color } from \"./Color\";\nexport class BetterCallStyleANSI extends BetterCallStyle {\n    constructor() {\n        super();\n        this.style.base = [];\n        this.style.info = [\n            Color.BgBlue,\n            Color.FgWhite,\n        ];\n        this.style.log = [\n            Color.BgBlack,\n            Color.FgWhite,\n        ];\n        this.style.debug = [\n            Color.BgCyan,\n            Color.FgBlack,\n        ];\n        this.style.warn = [\n            Color.BgYellow,\n            Color.FgBlack,\n        ];\n        this.style.error = [\n            Color.BgRed,\n            Color.FgBlack,\n        ];\n        this.style.trace = [\n            Color.BgMagenta,\n            Color.FgWhite,\n        ];\n        this.style.table = [\n            Color.BgMagenta,\n            Color.FgWhite,\n        ];\n        this.style.group = [\n            Color.BgMagenta,\n            Color.FgWhite,\n        ];\n        this.style.assert = [\n            Color.BgMagenta,\n            Color.FgWhite,\n        ];\n    }\n    toString(tag) {\n        return (this.style.base.join('') + (this.style[tag] ? this.style[tag].join('') : '') + '%s' + Color.Reset);\n    }\n    package(tag) {\n        return { style: this.toString(tag), tag: tag.toUpperCase(), order: { style: 0, tag: 1 } };\n    }\n}\n","import { BetterCallStyle } from \"./BetterCallStyle\";\nexport class BetterCallStyleCSS extends BetterCallStyle {\n    constructor() {\n        super();\n        this.style.base = [\n            \"padding: 2px 4px\",\n            \"border-radius: 2px\"\n        ];\n        this.style.debug = [\n            \"background-color: #5EEBC2\",\n            \"color: #000000\"\n        ];\n        this.style.error = [\n            \"background-color: #F54E47\",\n            \"color: #000000\"\n        ];\n        this.style.info = [\n            \"background-color: #30A2F5\",\n            \"color: #D0FFFF\"\n        ];\n        this.style.log = [\n            \"background-color: #000000\",\n            \"color: #FFFFFF\"\n        ];\n        this.style.warn = [\n            \"background-color: #EBBA3E\",\n            \"color: #000000\"\n        ];\n        this.style.trace = [\n            \"background-color: #69187D\",\n            \"color: #FFFFFF\"\n        ];\n        this.style.table = [\n            \"background-color: #69187D\",\n            \"color: #FFFFFF\"\n        ];\n        this.style.group = [\n            \"background-color: #69187D\",\n            \"color: #FFFFFF\"\n        ];\n        this.style.assert = [\n            \"background-color: #69187D\",\n            \"color: #FFFFFF\"\n        ];\n    }\n    toString(tag) {\n        return (this.style.base.join(';') + ';') + (this.style[tag] ? this.style[tag].join(';') + ';' : '');\n    }\n    package(tag) {\n        return { style: this.toString(tag), tag: '%c' + tag.toUpperCase(), order: { tag: 0, style: 1 } };\n    }\n}\n","import { BetterCallLevel } from \"./BetterCallLevel\";\nimport { BetterCallStyleANSI } from \"./BetterCallStyleANSI\";\nimport { BetterCallStyleCSS } from \"./BetterCallStyleCSS\";\nexport class BetterCallOptions {\n    constructor() {\n        this.level = BetterCallLevel.ALL;\n        this.ignoreAssert = false;\n        this.style = typeof window !== 'undefined' ? new BetterCallStyleCSS() : new BetterCallStyleANSI;\n        this.showTimestamp = true;\n        this.compactMode = false;\n        this.compactCollapsed = false;\n    }\n}\n","import { BetterCallLevel } from \"./BetterCallLevel\";\nimport { BetterCallOptions } from \"./BetterCallOptions\";\nexport class BetterCall {\n    constructor(name, options) {\n        this.name = name !== null && name !== void 0 ? name : 'Better Call LOG';\n        this.options = options !== null && options !== void 0 ? options : new BetterCallOptions();\n    }\n    static level(level) {\n        return BetterCall.getInstance().level(level);\n    }\n    level(level) {\n        if (level != null) {\n            this.options.level = level;\n        }\n        return this.options.level;\n    }\n    static getInstance() {\n        if (!BetterCall.instance) {\n            BetterCall.instance = new BetterCall();\n        }\n        return BetterCall.instance;\n    }\n    static isOff() {\n        return BetterCall.getInstance().isOff();\n    }\n    isOff() {\n        return !(this.level() | BetterCallLevel.OFF);\n    }\n    static assert(...args) {\n        return BetterCall.getInstance().assert(...args);\n    }\n    assert(...args) {\n        if (this.isOff())\n            return;\n        let assertion = args[0];\n        if (!assertion || !this.options.ignoreAssert) {\n            this.fire('group', 'ASSERT');\n        }\n        if (assertion && !this.options.ignoreAssert) {\n            console.info('ASSERTION ', ...args);\n        }\n        console.assert(...args);\n        if (!assertion || !this.options.ignoreAssert) {\n            this.groupEnd();\n        }\n    }\n    static clear() {\n        BetterCall.getInstance().clear();\n    }\n    clear() {\n        if (this.isOff())\n            return;\n        console.clear();\n    }\n    static count(label) {\n        return BetterCall.getInstance().count(label);\n    }\n    count(label) {\n        if (this.isOff())\n            return;\n        label = label !== null && label !== void 0 ? label : this.name;\n        console.count(label);\n    }\n    static countReset(label) {\n        return BetterCall.getInstance().countReset(label);\n    }\n    countReset(label) {\n        if (this.isOff())\n            return;\n        label = label !== null && label !== void 0 ? label : this.name;\n        console.countReset(label);\n    }\n    static debug(...args) {\n        return BetterCall.getInstance().debug(...args);\n    }\n    debug(...args) {\n        if (this.level() & BetterCallLevel.DEBUG)\n            this.fire('debug', ...args);\n    }\n    static dir(obj) {\n        return BetterCall.getInstance().dir(obj);\n    }\n    dir(obj) {\n        if (this.isOff())\n            return;\n        console.dir(obj);\n    }\n    static dirxml(obj) {\n        return BetterCall.getInstance().dirxml(obj);\n    }\n    dirxml(obj) {\n        if (this.isOff())\n            return;\n        console.dirxml(obj);\n    }\n    static error(...args) {\n        return BetterCall.getInstance().error(...args);\n    }\n    error(...args) {\n        if (this.level() & BetterCallLevel.ERROR)\n            this.fire('error', ...args);\n    }\n    static group(label) {\n        return BetterCall.getInstance().group(label);\n    }\n    group(label) {\n        if (this.isOff())\n            return;\n        label = label !== null && label !== void 0 ? label : this.name;\n        console.group(label);\n    }\n    static groupCollapsed(label) {\n        return BetterCall.getInstance().groupCollapsed(label);\n    }\n    groupCollapsed(label) {\n        if (this.isOff())\n            return;\n        label = label !== null && label !== void 0 ? label : this.name;\n        console.groupCollapsed(label);\n    }\n    static groupEnd(n) {\n        return BetterCall.getInstance().groupEnd(n);\n    }\n    groupEnd(n) {\n        if (this.isOff())\n            return;\n        n = n !== null && n !== void 0 ? n : 1;\n        for (let i = 0; i < n; i++) {\n            console.groupEnd();\n        }\n    }\n    static info(...args) {\n        return BetterCall.getInstance().info(...args);\n    }\n    info(...args) {\n        if (this.level() & BetterCallLevel.INFO)\n            this.fire('info', ...args);\n    }\n    static log(...args) {\n        return BetterCall.getInstance().log(...args);\n    }\n    log(...args) {\n        if (this.level() & BetterCallLevel.LOG)\n            this.fire('log', ...args);\n    }\n    static table(data) {\n        return BetterCall.getInstance().table(data);\n    }\n    table(data, name, columns) {\n        if (this.isOff())\n            return;\n        this.fire('group', 'TABLE', name !== null && name !== void 0 ? name : this.name);\n        console.table(data, columns);\n        this.groupEnd();\n    }\n    static time(label) {\n        return BetterCall.getInstance().time(label);\n    }\n    time(label) {\n        if (this.isOff())\n            return;\n        console.time(label);\n    }\n    static timeEnd(label) {\n        return BetterCall.getInstance().timeEnd(label);\n    }\n    timeEnd(label) {\n        if (this.isOff())\n            return;\n        this.fire('group', 'TIME END');\n        console.timeEnd(label);\n        this.groupEnd();\n    }\n    static timeLog(label) {\n        return BetterCall.getInstance().timeLog(label);\n    }\n    timeLog(label) {\n        if (this.isOff())\n            return;\n        this.fire('group', 'TIME LOG');\n        console.timeLog(label);\n        this.groupEnd();\n    }\n    static timeStamp(label) {\n        return BetterCall.getInstance().timeStamp(label);\n    }\n    timeStamp(label) {\n        let options = {\n            year: 'numeric', month: 'numeric', day: 'numeric',\n            hour: 'numeric', minute: 'numeric', second: 'numeric',\n            hour12: false,\n        };\n        // TODO use luxon\n        let locale = typeof navigator !== 'undefined' ? navigator.language : 'en-EN';\n        return label !== null && label !== void 0 ? label : '' + ' ' + Intl.DateTimeFormat(locale, options).format(new Date());\n    }\n    static trace(...args) {\n        return BetterCall.getInstance().trace(...args);\n    }\n    trace(...args) {\n        if (this.isOff())\n            return;\n        this.fire('trace', ...args);\n    }\n    static warn(...args) {\n        return BetterCall.getInstance().warn(...args);\n    }\n    warn(...args) {\n        if (this.level() & BetterCallLevel.WARNING)\n            this.fire('warn', ...args);\n    }\n    fire(tag, ...args) {\n        let p = this.options.style.package(tag);\n        let tagSpaces = '';\n        let nameSpaces = '';\n        for (let i = 0; i < 10 - p.tag.length; i++)\n            tagSpaces += ' ';\n        let name = this.name.length > 20 ? this.name.substring(0, 20) + '...' : this.name;\n        for (let i = 0; i < 25 - name.length; i++)\n            nameSpaces += ' ';\n        let content = [];\n        content[p.order['tag']] = p.tag + tagSpaces + '➤ ' + name + nameSpaces + (this.options.showTimestamp ? '➤' + this.timeStamp() : '');\n        content[p.order['style']] = p.style;\n        content.push('\\n↳');\n        if (this.options.compactMode) {\n            content.pop();\n            this.options.compactCollapsed ? console.groupCollapsed.apply(this, content) : console.group.apply(this, content);\n        }\n        console[tag].apply(this, (this.options.compactMode ? args : content.concat(args)));\n        if (this.options.compactMode) {\n            console.groupEnd.call(this);\n        }\n    }\n}\nBetterCall.LEVEL_OFF = 0x00;\nBetterCall.LEVEL_INFO = 0x10;\nBetterCall.LEVEL_LOG = 0x20;\nBetterCall.LEVEL_DEBUG = 0x30;\nBetterCall.LEVEL_WARNING = 0x40;\nBetterCall.LEVEL_ERROR = 0x50;\n","import { BetterCall as Log } from './BetterCall';\nimport { BetterCallOptions as Options } from './BetterCallOptions';\nimport { BetterCallStyle as Style } from './BetterCallStyle';\nimport { BetterCallStyleCSS as StyleCSS } from './BetterCallStyleCSS';\nimport { BetterCallStyleANSI as StyleANSI } from './BetterCallStyleANSI';\nimport { BetterCallStyleObject as StyleObject } from './BetterCallStyleObject';\nimport { BetterCallStylePackage as StylePackage } from './BetterCallStylePackage';\nimport { BetterCallLevel as Level } from './BetterCallLevel';\nexport default {\n    Log,\n    Level,\n    Options,\n    Style,\n    StyleANSI,\n    StyleCSS,\n    StyleObject,\n    StylePackage\n};\n","export class BetterCallStylePackage {\n}\n"],"names":["root","factory","exports","module","define","amd","this","BetterCallLevel","Color","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","BetterCallStyleObject","BetterCallStyle","constructor","style","BetterCallStyleANSI","super","base","info","BgBlue","FgWhite","log","BgBlack","debug","BgCyan","FgBlack","warn","BgYellow","error","BgRed","trace","BgMagenta","table","group","assert","toString","tag","join","Reset","package","toUpperCase","order","BetterCallStyleCSS","BetterCallOptions","level","ALL","ignoreAssert","window","showTimestamp","compactMode","compactCollapsed","BetterCall","name","options","static","getInstance","instance","isOff","OFF","args","assertion","fire","console","groupEnd","clear","label","count","countReset","DEBUG","dir","dirxml","ERROR","groupCollapsed","n","i","INFO","LOG","data","columns","time","timeEnd","timeLog","timeStamp","locale","navigator","language","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","Date","WARNING","p","tagSpaces","nameSpaces","length","substring","content","push","pop","apply","concat","LEVEL_OFF","LEVEL_INFO","LEVEL_LOG","LEVEL_DEBUG","LEVEL_WARNING","LEVEL_ERROR","Log","Level","Options","Style","StyleANSI","StyleCSS","StyleObject","StylePackage"],"sourceRoot":""}